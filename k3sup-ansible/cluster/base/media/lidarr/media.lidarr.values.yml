image:
  repository: linuxserver/lidarr
  pullPolicy: IfNotPresent
  tag: arm64v8-version-0.8.1.2135

strategy:
  type: Recreate

env:
  TZ: "Europe/London"

service:
  type: ClusterIP
  port:
    port: 8686

ingress:
  enabled: false

probes:
  liveness:
    enabled: true
    ## Set this to true if you wish to specify your own livenessProbe
    custom: true
    ## The spec field contains the values for the default livenessProbe.
    ## If you selected custom: true, this field holds the definition of the livenessProbe.
    spec:
      exec:
        command:
        - /usr/bin/env
        - bash
        - -c
        - curl --fail localhost:8686/api/v1/system/status?apiKey=`IFS=\> && while
          read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
      failureThreshold: 5
      initialDelaySeconds: 60
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10

persistence:
  config:
    enabled: true
    emptyDir: false
    ## If you want to reuse an existing claim, you can pass the name of the PVC using
    ## the existingClaim variable
    existingClaim: "media-config-ssd-claim"
    subPath: "configs/lidarr"
    accessMode: ReadWriteOnce
    size: 1Gi
    ## Do not delete the pvc upon helm uninstall
    skipuninstall: false

  media:
    enabled: true
    emptyDir: false
    mountPath: /media
    existingClaim: "media-ssd-claim"
    accessMode: ReadWriteOnce
    size: 10Gi
    skipuninstall: false
    ## Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    # storageClass: "-"
    # accessMode: ReadWriteOnce
    # size: 1Gi
    ## Do not delete the pvc upon helm uninstall
    # skipuninstall: false
    # existingClaim: ""
